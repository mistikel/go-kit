// Code generated by protoc-gen-go.
// source: movie.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	movie.proto

It has these top-level messages:
	SearchRequest
	SearchReply
	SearchReplys
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SearchRequest struct {
	Keyword string `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
	Page    int64  `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func (m *SearchRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

type SearchReply struct {
	Title  string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Year   string `protobuf:"bytes,2,opt,name=year" json:"year,omitempty"`
	Id     string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=type" json:"type,omitempty"`
	Poster string `protobuf:"bytes,5,opt,name=poster" json:"poster,omitempty"`
}

func (m *SearchReply) Reset()                    { *m = SearchReply{} }
func (m *SearchReply) String() string            { return proto.CompactTextString(m) }
func (*SearchReply) ProtoMessage()               {}
func (*SearchReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SearchReply) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchReply) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *SearchReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SearchReply) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SearchReply) GetPoster() string {
	if m != nil {
		return m.Poster
	}
	return ""
}

type SearchReplys struct {
	Search []*SearchReply `protobuf:"bytes,1,rep,name=Search" json:"Search,omitempty"`
}

func (m *SearchReplys) Reset()                    { *m = SearchReplys{} }
func (m *SearchReplys) String() string            { return proto.CompactTextString(m) }
func (*SearchReplys) ProtoMessage()               {}
func (*SearchReplys) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SearchReplys) GetSearch() []*SearchReply {
	if m != nil {
		return m.Search
	}
	return nil
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "pb.SearchRequest")
	proto.RegisterType((*SearchReply)(nil), "pb.SearchReply")
	proto.RegisterType((*SearchReplys)(nil), "pb.SearchReplys")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Movie service

type MovieClient interface {
	SearchMovie(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReplys, error)
}

type movieClient struct {
	cc *grpc.ClientConn
}

func NewMovieClient(cc *grpc.ClientConn) MovieClient {
	return &movieClient{cc}
}

func (c *movieClient) SearchMovie(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchReplys, error) {
	out := new(SearchReplys)
	err := grpc.Invoke(ctx, "/pb.Movie/SearchMovie", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Movie service

type MovieServer interface {
	SearchMovie(context.Context, *SearchRequest) (*SearchReplys, error)
}

func RegisterMovieServer(s *grpc.Server, srv MovieServer) {
	s.RegisterService(&_Movie_serviceDesc, srv)
}

func _Movie_SearchMovie_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServer).SearchMovie(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Movie/SearchMovie",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServer).SearchMovie(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Movie_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Movie",
	HandlerType: (*MovieServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchMovie",
			Handler:    _Movie_SearchMovie_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "movie.proto",
}

func init() { proto.RegisterFile("movie.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4e, 0xc4, 0x20,
	0x10, 0x87, 0x2d, 0xdd, 0xd6, 0xec, 0xd4, 0xbf, 0x13, 0x63, 0x88, 0xa7, 0x86, 0x8b, 0x3d, 0xf5,
	0xb0, 0x9a, 0x78, 0xda, 0x47, 0xf0, 0x82, 0x4f, 0xd0, 0xba, 0x13, 0x25, 0xae, 0x01, 0x01, 0x35,
	0xbc, 0xbd, 0xe9, 0xd0, 0x26, 0x8d, 0xb7, 0xdf, 0x37, 0xcc, 0x37, 0xc0, 0x40, 0xf3, 0x69, 0x7f,
	0x0c, 0xf5, 0xce, 0xdb, 0x68, 0x51, 0xb8, 0x51, 0xed, 0xe1, 0xfc, 0x85, 0x06, 0xff, 0xfa, 0xae,
	0xe9, 0xeb, 0x9b, 0x42, 0x44, 0x09, 0xa7, 0x1f, 0x94, 0x7e, 0xad, 0x3f, 0xc8, 0xa2, 0x2d, 0xba,
	0xad, 0x5e, 0x10, 0x11, 0x36, 0x6e, 0x78, 0x23, 0x29, 0xda, 0xa2, 0x2b, 0x35, 0x67, 0x15, 0xa0,
	0x59, 0x74, 0x77, 0x4c, 0x78, 0x03, 0x55, 0x34, 0xf1, 0x48, 0xb3, 0x9a, 0x61, 0x12, 0x13, 0x0d,
	0x9e, 0xc5, 0xad, 0xe6, 0x8c, 0x17, 0x20, 0xcc, 0x41, 0x96, 0x5c, 0x11, 0x86, 0x87, 0xc7, 0xe4,
	0x48, 0x6e, 0x72, 0xcf, 0x94, 0xf1, 0x16, 0x6a, 0x67, 0x43, 0x24, 0x2f, 0x2b, 0xae, 0xce, 0xa4,
	0x9e, 0xe0, 0x6c, 0x75, 0x69, 0xc0, 0x7b, 0xa8, 0x33, 0xcb, 0xa2, 0x2d, 0xbb, 0x66, 0x77, 0xd9,
	0xbb, 0xb1, 0x5f, 0x75, 0xe8, 0xf9, 0x78, 0xb7, 0x87, 0xea, 0x79, 0xfa, 0x3f, 0x3e, 0x2e, 0xcf,
	0xce, 0x78, 0xbd, 0x16, 0x78, 0x0d, 0x77, 0x57, 0xff, 0x66, 0x04, 0x75, 0x32, 0xd6, 0xbc, 0xb6,
	0x87, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x20, 0xa4, 0xc0, 0x45, 0x01, 0x00, 0x00,
}
